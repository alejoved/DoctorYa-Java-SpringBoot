<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.project.doctorya.PatientTest.PatientIntegrationTest" time="2.034" tests="11" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\joaaguir\Documents\github\DoctorYa-Java-SpringBoot\target\test-classes;C:\Users\joaaguir\Documents\github\DoctorYa-Java-SpringBoot\target\classes;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.5\spring-boot-starter-web-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.5\spring-boot-starter-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.5\spring-boot-starter-logging-3.4.5.jar;C:\Users\joaaguir\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\joaaguir\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\joaaguir\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\joaaguir\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\joaaguir\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\joaaguir\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\joaaguir\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.5\spring-boot-starter-json-3.4.5.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.5\spring-boot-starter-tomcat-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\joaaguir\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\joaaguir\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-web\6.2.6\spring-web-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-beans\6.2.6\spring-beans-6.2.6.jar;C:\Users\joaaguir\.m2\repository\io\micrometer\micrometer-observation\1.14.6\micrometer-observation-1.14.6.jar;C:\Users\joaaguir\.m2\repository\io\micrometer\micrometer-commons\1.14.6\micrometer-commons-1.14.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-webmvc\6.2.6\spring-webmvc-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-context\6.2.6\spring-context-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-expression\6.2.6\spring-expression-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.5\spring-boot-devtools-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot\3.4.5\spring-boot-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.5\spring-boot-autoconfigure-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.5\spring-boot-starter-data-jpa-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.5\spring-boot-starter-jdbc-3.4.5.jar;C:\Users\joaaguir\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-jdbc\6.2.6\spring-jdbc-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\hibernate\orm\hibernate-core\6.6.13.Final\hibernate-core-6.6.13.Final.jar;C:\Users\joaaguir\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\joaaguir\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\joaaguir\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\joaaguir\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\joaaguir\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\joaaguir\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\joaaguir\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\joaaguir\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\joaaguir\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\joaaguir\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\joaaguir\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\joaaguir\.m2\repository\org\springframework\data\spring-data-jpa\3.4.5\spring-data-jpa-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\data\spring-data-commons\3.4.5\spring-data-commons-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-orm\6.2.6\spring-orm-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-tx\6.2.6\spring-tx-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-aspects\6.2.6\spring-aspects-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\joaaguir\.m2\repository\org\postgresql\postgresql\42.7.5\postgresql-42.7.5.jar;C:\Users\joaaguir\.m2\repository\org\checkerframework\checker-qual\3.48.3\checker-qual-3.48.3.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.5\spring-boot-starter-security-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-aop\6.2.6\spring-aop-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-config\6.4.5\spring-security-config-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-web\6.4.5\spring-security-web-6.4.5.jar;C:\Users\joaaguir\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\joaaguir\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\joaaguir\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\joaaguir\.m2\repository\org\modelmapper\modelmapper\3.1.1\modelmapper-3.1.1.jar;C:\Users\joaaguir\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\joaaguir\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\joaaguir\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.4.5\spring-boot-starter-oauth2-resource-server-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-core\6.4.5\spring-security-core-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-crypto\6.4.5\spring-security-crypto-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.4.5\spring-security-oauth2-resource-server-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.4.5\spring-security-oauth2-core-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.4.5\spring-security-oauth2-jose-6.4.5.jar;C:\Users\joaaguir\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\joaaguir\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\joaaguir\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.8.8\springdoc-openapi-starter-webmvc-ui-2.8.8.jar;C:\Users\joaaguir\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.8.8\springdoc-openapi-starter-webmvc-api-2.8.8.jar;C:\Users\joaaguir\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.8.8\springdoc-openapi-starter-common-2.8.8.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.5\spring-boot-starter-validation-3.4.5.jar;C:\Users\joaaguir\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.30\swagger-core-jakarta-2.2.30.jar;C:\Users\joaaguir\.m2\repository\org\apache\commons\commons-lang3\3.17.0\commons-lang3-3.17.0.jar;C:\Users\joaaguir\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.30\swagger-annotations-jakarta-2.2.30.jar;C:\Users\joaaguir\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.30\swagger-models-jakarta-2.2.30.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.18.3\jackson-dataformat-yaml-2.18.3.jar;C:\Users\joaaguir\.m2\repository\org\webjars\swagger-ui\5.21.0\swagger-ui-5.21.0.jar;C:\Users\joaaguir\.m2\repository\org\webjars\webjars-locator-lite\1.0.1\webjars-locator-lite-1.0.1.jar;C:\Users\joaaguir\.m2\repository\org\jspecify\jspecify\1.0.0\jspecify-1.0.0.jar;C:\Users\joaaguir\.m2\repository\me\paulschwarz\spring-dotenv\2.2.0\spring-dotenv-2.2.0.jar;C:\Users\joaaguir\.m2\repository\io\github\cdimascio\dotenv-java\2.0.0\dotenv-java-2.0.0.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.5\spring-boot-starter-test-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-test\3.4.5\spring-boot-test-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.5\spring-boot-test-autoconfigure-3.4.5.jar;C:\Users\joaaguir\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\joaaguir\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\joaaguir\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\joaaguir\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\joaaguir\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\joaaguir\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\joaaguir\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\joaaguir\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\joaaguir\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\joaaguir\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\joaaguir\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\joaaguir\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\joaaguir\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\joaaguir\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\joaaguir\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-core\6.2.6\spring-core-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-jcl\6.2.6\spring-jcl-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-test\6.2.6\spring-test-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\joaaguir\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\joaaguir\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\joaaguir\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\joaaguir\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\joaaguir\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\joaaguir\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\joaaguir\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\joaaguir\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\joaaguir\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="America/Bogota"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="doctorya"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CO"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin"/>
    <property name="sun.java.command" value="C:\Users\joaaguir\AppData\Local\Temp\surefire14414913428255477661\surefirebooter-20250527154107837_3.jar C:\Users\joaaguir\AppData\Local\Temp\surefire14414913428255477661 2025-05-27T15-41-07_240-jvmRun1 surefire-20250527154107837_1tmp surefire_0-20250527154107837_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\joaaguir\Documents\github\DoctorYa-Java-SpringBoot\target\test-classes;C:\Users\joaaguir\Documents\github\DoctorYa-Java-SpringBoot\target\classes;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.5\spring-boot-starter-web-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.5\spring-boot-starter-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.5\spring-boot-starter-logging-3.4.5.jar;C:\Users\joaaguir\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\joaaguir\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\joaaguir\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\joaaguir\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\joaaguir\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\joaaguir\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\joaaguir\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.5\spring-boot-starter-json-3.4.5.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.5\spring-boot-starter-tomcat-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.40\tomcat-embed-core-10.1.40.jar;C:\Users\joaaguir\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\joaaguir\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.40\tomcat-embed-websocket-10.1.40.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-web\6.2.6\spring-web-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-beans\6.2.6\spring-beans-6.2.6.jar;C:\Users\joaaguir\.m2\repository\io\micrometer\micrometer-observation\1.14.6\micrometer-observation-1.14.6.jar;C:\Users\joaaguir\.m2\repository\io\micrometer\micrometer-commons\1.14.6\micrometer-commons-1.14.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-webmvc\6.2.6\spring-webmvc-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-context\6.2.6\spring-context-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-expression\6.2.6\spring-expression-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.5\spring-boot-devtools-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot\3.4.5\spring-boot-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.5\spring-boot-autoconfigure-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.5\spring-boot-starter-data-jpa-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.5\spring-boot-starter-jdbc-3.4.5.jar;C:\Users\joaaguir\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-jdbc\6.2.6\spring-jdbc-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\hibernate\orm\hibernate-core\6.6.13.Final\hibernate-core-6.6.13.Final.jar;C:\Users\joaaguir\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\joaaguir\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\joaaguir\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\joaaguir\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\joaaguir\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\joaaguir\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\joaaguir\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\joaaguir\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\joaaguir\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\joaaguir\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\joaaguir\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\joaaguir\.m2\repository\org\springframework\data\spring-data-jpa\3.4.5\spring-data-jpa-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\data\spring-data-commons\3.4.5\spring-data-commons-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-orm\6.2.6\spring-orm-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-tx\6.2.6\spring-tx-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-aspects\6.2.6\spring-aspects-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\joaaguir\.m2\repository\org\postgresql\postgresql\42.7.5\postgresql-42.7.5.jar;C:\Users\joaaguir\.m2\repository\org\checkerframework\checker-qual\3.48.3\checker-qual-3.48.3.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.5\spring-boot-starter-security-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-aop\6.2.6\spring-aop-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-config\6.4.5\spring-security-config-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-web\6.4.5\spring-security-web-6.4.5.jar;C:\Users\joaaguir\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\joaaguir\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\joaaguir\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\joaaguir\.m2\repository\org\modelmapper\modelmapper\3.1.1\modelmapper-3.1.1.jar;C:\Users\joaaguir\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\joaaguir\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\joaaguir\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-resource-server\3.4.5\spring-boot-starter-oauth2-resource-server-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-core\6.4.5\spring-security-core-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-crypto\6.4.5\spring-security-crypto-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-oauth2-resource-server\6.4.5\spring-security-oauth2-resource-server-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.4.5\spring-security-oauth2-core-6.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.4.5\spring-security-oauth2-jose-6.4.5.jar;C:\Users\joaaguir\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\joaaguir\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\joaaguir\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-ui\2.8.8\springdoc-openapi-starter-webmvc-ui-2.8.8.jar;C:\Users\joaaguir\.m2\repository\org\springdoc\springdoc-openapi-starter-webmvc-api\2.8.8\springdoc-openapi-starter-webmvc-api-2.8.8.jar;C:\Users\joaaguir\.m2\repository\org\springdoc\springdoc-openapi-starter-common\2.8.8\springdoc-openapi-starter-common-2.8.8.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.5\spring-boot-starter-validation-3.4.5.jar;C:\Users\joaaguir\.m2\repository\io\swagger\core\v3\swagger-core-jakarta\2.2.30\swagger-core-jakarta-2.2.30.jar;C:\Users\joaaguir\.m2\repository\org\apache\commons\commons-lang3\3.17.0\commons-lang3-3.17.0.jar;C:\Users\joaaguir\.m2\repository\io\swagger\core\v3\swagger-annotations-jakarta\2.2.30\swagger-annotations-jakarta-2.2.30.jar;C:\Users\joaaguir\.m2\repository\io\swagger\core\v3\swagger-models-jakarta\2.2.30\swagger-models-jakarta-2.2.30.jar;C:\Users\joaaguir\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.18.3\jackson-dataformat-yaml-2.18.3.jar;C:\Users\joaaguir\.m2\repository\org\webjars\swagger-ui\5.21.0\swagger-ui-5.21.0.jar;C:\Users\joaaguir\.m2\repository\org\webjars\webjars-locator-lite\1.0.1\webjars-locator-lite-1.0.1.jar;C:\Users\joaaguir\.m2\repository\org\jspecify\jspecify\1.0.0\jspecify-1.0.0.jar;C:\Users\joaaguir\.m2\repository\me\paulschwarz\spring-dotenv\2.2.0\spring-dotenv-2.2.0.jar;C:\Users\joaaguir\.m2\repository\io\github\cdimascio\dotenv-java\2.0.0\dotenv-java-2.0.0.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.5\spring-boot-starter-test-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-test\3.4.5\spring-boot-test-3.4.5.jar;C:\Users\joaaguir\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.5\spring-boot-test-autoconfigure-3.4.5.jar;C:\Users\joaaguir\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\joaaguir\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\joaaguir\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\joaaguir\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\joaaguir\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\joaaguir\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\joaaguir\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\joaaguir\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\joaaguir\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\joaaguir\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\joaaguir\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\joaaguir\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\joaaguir\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\joaaguir\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\joaaguir\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-core\6.2.6\spring-core-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-jcl\6.2.6\spring-jcl-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\springframework\spring-test\6.2.6\spring-test-6.2.6.jar;C:\Users\joaaguir\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\joaaguir\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\joaaguir\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\joaaguir\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\joaaguir\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\joaaguir\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\joaaguir\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\joaaguir\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\joaaguir\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\joaaguir\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\joaaguir"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="C:\Program Files\Amazon Corretto\jdk17.0.6_10"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\joaaguir\Documents\github\DoctorYa-Java-SpringBoot"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\joaaguir\AppData\Local\Temp\surefire14414913428255477661\surefirebooter-20250527154107837_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.6+10-LTS"/>
    <property name="user.name" value="joaaguir"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.6.10.1"/>
    <property name="localRepository" value="C:\Users\joaaguir\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="C:\Users\joaaguir\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="2"/>
    <property name="java.version" value="17.0.6"/>
    <property name="user.dir" value="C:\Users\joaaguir\Documents\github\DoctorYa-Java-SpringBoot"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="7892"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Amazon Corretto\jdk17.0.6_10\bin;C:\Oracle21c\dbhomeXE\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\angular-cli-master;C:\Program Files\Amazon\SessionManagerPlugin\bin\;C:\Users\joaaguir\AppData\Roaming\npm\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\RedHat\Podman\;C:\Users\joaaguir\Documents\Bancolombia\kubernetes;C:\Program Files\Git\cmd;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\nodejs\;C:\docker;C:\Program Files\Kubernetes\Minikube;C:\Users\joaaguir\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\joaaguir\AppData\Local\Programs\Python\Python313\;C:\Users\joaaguir\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\joaaguir\AppData\Local\Programs\Python\Python312\;C:\Users\joaaguir\AppData\Local\Microsoft\WindowsApps;;C:\Users\joaaguir\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\joaaguir\AppData\Roaming\npm;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.6+10-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[doctorya] "/>
  </properties>
  <testcase name="testNotFoundDeletePatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.184">
    <system-out><![CDATA[2025-05-27T15:41:29.410-05:00  INFO 7892 --- [doctorya] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.project.doctorya.PatientTest.PatientIntegrationTest]: PatientIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-27T15:41:29.440-05:00  INFO 7892 --- [doctorya] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.project.doctorya.DoctoryaApplication for test class com.project.doctorya.PatientTest.PatientIntegrationTest
2025-05-27T15:41:29.446-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:29.446-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:29.446-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:29.526-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:29.526-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:29.526-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
2025-05-27T15:41:29.602-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing DELETE /patient/9eda1cde-0a69-464a-9a84-d39f8a0a8cc5
2025-05-27T15:41:29.603-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:29.603-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@2ac1980a, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:29.603-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured DELETE /patient/9eda1cde-0a69-464a-9a84-d39f8a0a8cc5
2025-05-27T15:41:29.604-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorizing method invocation ReflectiveMethodInvocation: public void com.project.doctorya.patient.controller.PatientController.delete(java.util.UUID); target is of class [com.project.doctorya.patient.controller.PatientController]
2025-05-27T15:41:29.604-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorized method invocation ReflectiveMethodInvocation: public void com.project.doctorya.patient.controller.PatientController.delete(java.util.UUID); target is of class [com.project.doctorya.patient.controller.PatientController]
Hibernate: select p1_0.id,a1_0.id,a1_0.identification,a1_0.password,a1_0.rol,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where p1_0.id=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testCreatePatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.251">
    <system-out><![CDATA[2025-05-27T15:41:29.630-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:29.630-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:29.631-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:29.703-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:29.703-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:29.703-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
2025-05-27T15:41:29.783-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /patient
2025-05-27T15:41:29.784-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:29.784-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@2ac1980a, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:29.785-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /patient
2025-05-27T15:41:29.789-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.project.doctorya.patient.controller.PatientController.create(com.project.doctorya.patient.dto.PatientDTO); target is of class [com.project.doctorya.patient.controller.PatientController]
2025-05-27T15:41:29.790-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.project.doctorya.patient.controller.PatientController.create(com.project.doctorya.patient.dto.PatientDTO); target is of class [com.project.doctorya.patient.controller.PatientController]
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testGetPatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.172">
    <system-out><![CDATA[2025-05-27T15:41:29.883-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:29.883-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:29.883-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:29.956-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:29.957-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:29.957-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
2025-05-27T15:41:30.029-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing GET /patient
2025-05-27T15:41:30.030-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:30.030-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@223e07c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:30.030-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured GET /patient
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testUpdatePatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.181">
    <system-out><![CDATA[2025-05-27T15:41:30.056-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:30.056-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.056-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:30.137-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:30.137-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.137-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
2025-05-27T15:41:30.210-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing PUT /patient/3669d56f-5194-4fcf-a614-38d96626c1b9
2025-05-27T15:41:30.211-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:30.211-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@223e07c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:30.211-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured PUT /patient/3669d56f-5194-4fcf-a614-38d96626c1b9
Hibernate: select p1_0.id,a1_0.id,a1_0.identification,a1_0.password,a1_0.rol,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where p1_0.id=?
Hibernate: update patient set auth_id=?,insurance=?,name=? where id=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testExistsCreatePatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.193">
    <system-out><![CDATA[2025-05-27T15:41:30.247-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:30.249-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.250-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:30.333-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:30.333-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.333-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
2025-05-27T15:41:30.408-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /patient
2025-05-27T15:41:30.409-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:30.409-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@223e07c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:30.409-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /patient
2025-05-27T15:41:30.410-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.project.doctorya.patient.controller.PatientController.create(com.project.doctorya.patient.dto.PatientDTO); target is of class [com.project.doctorya.patient.controller.PatientController]
2025-05-27T15:41:30.410-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.project.doctorya.patient.controller.PatientController.create(com.project.doctorya.patient.dto.PatientDTO); target is of class [com.project.doctorya.patient.controller.PatientController]
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testGetByIdPatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.174">
    <system-out><![CDATA[2025-05-27T15:41:30.431-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:30.431-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.432-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:30.506-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:30.506-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.506-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
2025-05-27T15:41:30.581-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing GET /patient/10e515c8-1736-45da-97fb-2f7e5568b332
2025-05-27T15:41:30.582-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:30.582-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@223e07c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:30.582-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured GET /patient/10e515c8-1736-45da-97fb-2f7e5568b332
2025-05-27T15:41:30.583-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.project.doctorya.patient.controller.PatientController.getById(java.util.UUID); target is of class [com.project.doctorya.patient.controller.PatientController]
2025-05-27T15:41:30.584-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.project.doctorya.patient.controller.PatientController.getById(java.util.UUID); target is of class [com.project.doctorya.patient.controller.PatientController]
Hibernate: select p1_0.id,a1_0.id,a1_0.identification,a1_0.password,a1_0.rol,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where p1_0.id=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testDeletePatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.168">
    <system-out><![CDATA[2025-05-27T15:41:30.606-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:30.606-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.606-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:30.678-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:30.678-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.679-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
2025-05-27T15:41:30.754-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing DELETE /patient/f1b234ef-c990-4e70-8237-c28fd415935d
2025-05-27T15:41:30.755-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:30.755-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@223e07c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:30.755-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured DELETE /patient/f1b234ef-c990-4e70-8237-c28fd415935d
2025-05-27T15:41:30.756-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorizing method invocation ReflectiveMethodInvocation: public void com.project.doctorya.patient.controller.PatientController.delete(java.util.UUID); target is of class [com.project.doctorya.patient.controller.PatientController]
2025-05-27T15:41:30.756-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorized method invocation ReflectiveMethodInvocation: public void com.project.doctorya.patient.controller.PatientController.delete(java.util.UUID); target is of class [com.project.doctorya.patient.controller.PatientController]
Hibernate: select p1_0.id,a1_0.id,a1_0.identification,a1_0.password,a1_0.rol,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where p1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select p1_0.id,a1_0.id,a1_0.identification,a1_0.password,a1_0.rol,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where p1_0.id=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testGetByIdNotFoundPatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.164">
    <system-out><![CDATA[2025-05-27T15:41:30.783-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:30.784-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.784-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:30.856-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:30.856-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.857-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
2025-05-27T15:41:30.929-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing GET /patient/cbd8f070-75b7-498b-8cf4-ffe8c6cc465a
2025-05-27T15:41:30.930-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:30.930-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@223e07c, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:30.930-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured GET /patient/cbd8f070-75b7-498b-8cf4-ffe8c6cc465a
2025-05-27T15:41:30.931-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.project.doctorya.patient.controller.PatientController.getById(java.util.UUID); target is of class [com.project.doctorya.patient.controller.PatientController]
2025-05-27T15:41:30.931-05:00 DEBUG 7892 --- [doctorya] [           main] horizationManagerBeforeMethodInterceptor : Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.project.doctorya.patient.controller.PatientController.getById(java.util.UUID); target is of class [com.project.doctorya.patient.controller.PatientController]
Hibernate: select p1_0.id,a1_0.id,a1_0.identification,a1_0.password,a1_0.rol,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where p1_0.id=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testNotFoundUpdatePatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.168">
    <system-out><![CDATA[2025-05-27T15:41:30.947-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:30.947-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:30.948-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:31.023-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:31.024-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:31.024-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
2025-05-27T15:41:31.099-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing PUT /patient/497bf725-f5bd-4fea-a4ab-01fe92847f6a
2025-05-27T15:41:31.100-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:31.100-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@e52c1cf2, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:31.100-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured PUT /patient/497bf725-f5bd-4fea-a4ab-01fe92847f6a
Hibernate: select p1_0.id,a1_0.id,a1_0.identification,a1_0.password,a1_0.rol,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where p1_0.id=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testGetByIdentificationPatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.171">
    <system-out><![CDATA[2025-05-27T15:41:31.116-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:31.116-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:31.116-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:31.188-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:31.188-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:31.188-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
Hibernate: insert into patient (auth_id,insurance,name,id) values (?,?,?,?)
2025-05-27T15:41:31.262-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing GET /patient/identification/1053847610
2025-05-27T15:41:31.263-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:31.263-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@e52c1cf2, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:31.263-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured GET /patient/identification/1053847610
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where a1_0.identification=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.id=?
Hibernate: delete from patient where id=?
Hibernate: delete from auth where id=?
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
  <testcase name="testGetByIdentificationNotFoundPatient" classname="com.project.doctorya.PatientTest.PatientIntegrationTest" time="0.156">
    <system-out><![CDATA[2025-05-27T15:41:31.287-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/register
2025-05-27T15:41:31.288-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:31.288-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/register
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
Hibernate: insert into auth (identification,password,rol,id) values (?,?,?,?)
2025-05-27T15:41:31.359-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing POST /auth/login
2025-05-27T15:41:31.359-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-27T15:41:31.359-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured POST /auth/login
1053847601
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0 where a1_0.identification=?
2025-05-27T15:41:31.429-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Securing GET /patient/identification/1053847600
2025-05-27T15:41:31.429-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.s.o.s.r.a.JwtAuthenticationProvider  : Authenticated token
2025-05-27T15:41:31.429-05:00 DEBUG 7892 --- [doctorya] [           main] .s.r.w.a.BearerTokenAuthenticationFilter : Set SecurityContextHolder to JwtAuthenticationToken [Principal=org.springframework.security.oauth2.jwt.Jwt@e52c1cf2, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=127.0.0.1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
2025-05-27T15:41:31.430-05:00 DEBUG 7892 --- [doctorya] [           main] o.s.security.web.FilterChainProxy        : Secured GET /patient/identification/1053847600
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0 left join auth a1_0 on a1_0.id=p1_0.auth_id where a1_0.identification=?
Hibernate: select p1_0.id,p1_0.auth_id,p1_0.insurance,p1_0.name from patient p1_0
Hibernate: select a1_0.id,a1_0.identification,a1_0.password,a1_0.rol from auth a1_0
Hibernate: delete from auth where id=?
]]></system-out>
  </testcase>
</testsuite>